create table if not exists public.stock_image
(
    image_id    bigint primary key generated by default as identity,
    created_at  timestamp(6),
    updated_at  timestamp(6),
    image_url   varchar(2048) not null,
    description varchar(255),
    tags        varchar(255)
    );

create table if not exists public."user"
(
    user_id     bigint primary key generated by default as identity,
    created_at  timestamp(6),
    updated_at  timestamp(6),
    nickname    varchar(50)  not null unique,
    provider    varchar(50),
    email       varchar(255) unique,
    password    varchar(255),
    provider_id varchar(255),
    role        varchar(255) not null,
    constraint uk_user_provider_and_id unique (provider, provider_id)
    );

create table if not exists public.question
(
    question_id        bigint primary key generated by default as identity,
    is_active          boolean      not null,
    created_at         timestamp(6),
    creator_id         bigint constraint fk_question_user references public."user",
    updated_at         timestamp(6),
    keyword            varchar(50),
    text               varchar(500) not null,
    option_a_image_url varchar(2048),
    option_b_image_url varchar(2048),
    option_a_text      varchar(255) not null,
    option_b_text      varchar(255) not null
    );

create table if not exists public.question_bundle
(
    bundle_id   bigint primary key generated by default as identity,
    is_public   boolean      not null,
    created_at  timestamp(6),
    creator_id  bigint       not null constraint fk_bundle_user references public."user",
    updated_at  timestamp(6),
    title       varchar(100) not null,
    description varchar(500)
    );

create table if not exists public.bundle_question
(
    bundle_question_id bigint primary key generated by default as identity,
    order_index        integer not null,
    bundle_id          bigint  not null constraint fk_bundle_question_bundle references public.question_bundle,
    question_id        bigint  not null constraint fk_bundle_question_question references public.question,
    constraint uk_bundle_question unique (bundle_id, question_id)
    );

create table if not exists public.game_session
(
    session_id  bigint primary key generated by default as identity,
    created_at  timestamp(6),
    user_id     bigint constraint fk_session_user references public."user",
    bundle_id   bigint not null constraint fk_session_bundle references public.question_bundle
    );

create table if not exists public.question_stats
(
    question_id    bigint primary key constraint fk_stats_question references public.question,
    option_a_count bigint       not null,
    option_b_count bigint       not null,
    total_count    bigint       not null,
    updated_at     timestamp(6) not null
    );

create table if not exists public.user_answer
(
    answer_id       bigint primary key generated by default as identity,
    selected_option char not null,
    answered_at     timestamp(6),
    question_id     bigint not null constraint fk_answer_question references public.question,
    user_id         bigint constraint fk_answer_user references public."user"
    );

create table if not exists public.question_bundle_stats
(
    bundle_id  bigint primary key constraint fk_bundle_stats_bundle references public.question_bundle (bundle_id),
    play_count bigint not null
    );
